Using ``1-my_list`` module
======================

This is an example text file in reStructuredText format.  First
import ```MyList``` from the ``1-my_list`` module:

>>> MyList = __import__('1-my_list').MyList

Now use it:

#0 - Default Test
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

#1 - Negative append
>>> my_list2.append(-1)
>>> my_list2.append(-2)
>>> my_list2.append(-3)
>>> my_list2.append(-4)
>>> my_list2.append(-5)
>>> print(my_list2)
[-1, -2, -3, -4, -5]
>>> my_list2.print_sorted()
[-5, -4, -3, -2, -1]

#2 - Empty list
>>> my_list2 = MyList()
>>> print(my_list2)
[]
>>> my_list2.print_sorted()
[]

#3 - Invalid argument
>>> my_list.print_sorted(list())
Traceback (most recent call last):
    ...
TypeError: print_sorted() takes 1 positional argument but 2 were given

#4 - Duplicated args
>>> my_list3 = MyList()
>>> my_list3.append(1)
>>> my_list3.append(1)
>>> my_list3.append(3)
>>> my_list3.append(2)
>>> my_list3.append(2)
>>> print(my_list3)
[1, 1, 3, 2, 2]
>>> my_list3.print_sorted()
[1, 1, 2, 2, 3]

#5 - Big numbers
>>> my_list4 = MyList()
>>> my_list4.append(10000000000)
>>> my_list4.append(9999999999)
>>> my_list4.append(88888888)
>>> my_list4.append(11111111111)
>>> my_list4.append(7777777)
>>> print(my_list4)
[10000000000, 9999999999, 88888888, 11111111111, 7777777]
>>> my_list4.print_sorted()
[7777777, 88888888, 9999999999, 10000000000, 11111111111]